1.描述Thread类中的start()方法与run()方法的区别
start（）：

用start方法来启动线程，真正实现了多线程运行，这时无需等待run方法体代码执行完毕而直接继续执行下面的代码。通过调用Thread类的start()方法来启动一个线程，这时此线程处于就绪（可运行）状态，并没有运行，一旦得到spu时间片，就开始执行run()方法，这里方法run()称为线程体，它包含了要执行的这个线程的内容，Run方法运行结束，此线程随即终止。

run（）：
run()方法只是类的一个普通方法而已，如果直接调用Run方法，程序中依然只有主线程这一个线程，其程序执行路径还是只有一条，还是要顺序执行，还是要等待run方法体执行完毕后才可继续执行下面的代码，这样就没有达到写线程的目的。


2.请描述以下方式创建线程的步骤。
继承Thread类方式 
1）定义Thread类的子类，并重写类中的run（）方法
2）创建Thread子类的实例，即创建了线程对象
3）调用线程对象的start（）方法来启动线程

实现Runnable接口方式
1）定义Runnable接口的实现类，并重写接口中的run（）
2）创建Runnable实现类的实例，并以此实例作为Thread的target来创建Thread对象，该对象才是真正的线程对象
3）调用线程对象的start（）方法来启动线程

3.请描述在线程的生命周期中， 有几种状态呢
新建状态
运行状态
阻塞状态
无限等待
计时等待
终止状态


















